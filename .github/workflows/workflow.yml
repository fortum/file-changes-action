name: Contribution Workflow
on: [pull_request]
jobs:
  # close any PR not going to master or develop
  close_pr:
    name: close non develop/master PR
    runs-on: ubuntu-latest
    # TODO: && ! (github.base_ref == 'master' || startsWith(github.head_ref, 'pre-release-'))
    if: >
      github.event_name == 'pull_request'
      && (github.event.action == 'opened' || github.event.action == 'reopened')
      && ! (github.base_ref == 'develop' || startsWith(github.head_ref, 'pre-release-'))
    steps:
      - uses: superbrothers/close-pull-request@v2
        with:
          comment: Please merge your code into develop, this will trigger the desired merge workflow.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/github@v1.0.0
        if: success()
        with:
          args: label "doesnt read directions"
  # make sure we can build
  build:
    name: yarn install && tsc
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - run: make run
      - uses: actions/github@v1.0.0
        # if: success() && github.base_ref == 'master' && startsWith(github.head_ref, 'release-')
        if: success() && github.base_ref == 'develop' && startsWith(github.head_ref, 'pre-release-')
        with:
          args: label builds
      - uses: actions/github@v1.0.0
        # if: success() && github.base_ref == 'master' && startsWith(github.head_ref, 'release-')
        if: failure() && github.base_ref == 'develop' && startsWith(github.head_ref, 'pre-release-')
        with:
          args: label "doesnt build"
  # test with jest
  test:
    name: jest
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - run: make run
      - run: make run COMMAND=test
      - uses: actions/github@v1.0.0
        # if: success() && github.base_ref == 'master' && startsWith(github.head_ref, 'release-')
        if: success() && github.base_ref == 'develop' && startsWith(github.head_ref, 'pre-release-')
        with:
          args: label tested
      - uses: actions/github@v1.0.0
        # if: success() && github.base_ref == 'master' && startsWith(github.head_ref, 'release-')
        if: failure() && github.base_ref == 'develop' && startsWith(github.head_ref, 'pre-release-')
        with:
          args: label untested
  # lint code and comment back if possible
  lintdog:
    name: eslintdog (reviewdog)
    runs-on: ubuntu-latest
    # if: github.event_name == 'pull_request' && github.base_ref == 'master' && startsWith(github.head_ref, 'release-')
    if: github.event_name == 'pull_request' && github.base_ref == 'develop' && startsWith(github.head_ref, 'pre-release-')
    steps:
      - uses: actions/checkout@v2
      - name: Lint and report
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          eslint_flags: 'src/**/*.ts'
  # format and push code back
  format_check_push:
    name: prettier
    runs-on: ubuntu-latest
    needs: lintdog
    # if: github.event_name == 'pull_request' && github.base_ref == 'master' && startsWith(github.head_ref, 'release-')
    if: github.event_name == 'pull_request' && github.base_ref == 'develop' && startsWith(github.head_ref, 'pre-release-')
    env:
      GITHUB_TOKEN: ${{ secrets.TRILOM_BOT_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ env.GITHUB_TOKEN }}
      - run: make run
      - run: make run COMMAND=format-check
      - uses: actions/github@v1.0.0
        if: success()
        with:
          args: label pretty
      - uses: actions/github@v1.0.0
        if: failure()
        with:
          args: label ugly
      - name: make run COMMAND=format and push code if check failed
        if: failure() && github.actor != 'trilom-bot'
        run: |
          make run COMMAND=format
          sudo make clean
          git config --local user.email "trilom-bot@trailmix.me"
          git config --local user.name "trilom-bot"
          git commit -m "Add format changes" -a
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.event.pull_request.head.repo.full_name }}.git HEAD:refs/heads/${{ github.head_ref }} && exit 0
